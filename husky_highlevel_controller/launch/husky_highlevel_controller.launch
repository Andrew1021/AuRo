<?xml version="1.0"?>
<!--
Software License Agreement (BSD)

\file      husky_highlevel_controller.launch
\authors   Andreas Roth <an721rot@htwg-konstanz.de.com>, Sebastian Hofmaier <sebastian.hofmaier@htwg-konstanz.de>
\copyright Copyright (c) 2021, HTWG Konstanz, All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that
the following conditions are met:
 * Redistributions of source code must retain the above copyright notice, this list of conditions and the
   following disclaimer.
 * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
   following disclaimer in the documentation and/or other materials provided with the distribution.
 * Neither the name of Clearpath Robotics nor the names of its contributors may be used to endorse or promote
   products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WAR-
RANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, IN-
DIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<launch>

  <arg name="world_name" default=""/>
  <arg name="start_rviz" default="false"/>

  <!-- Launch Gazebo and Husky with Empty World -->
  <group if="$(eval arg ('world_name') == 'empty.world')">
    <include file="$(find husky_gazebo)/launch/husky_empty_world.launch">
		  <arg name="laser_enabled" value="true"/>
	  </include>
  </group>

  <!-- Launch Gazebo and Husky with clearpath playpen World -->
  <group if="$(eval arg ('world_name') == 'clearpath_playpen.world')">
    <include file="$(find husky_gazebo)/launch/husky_playpen.launch">
		  <arg name="laser_enabled" value="true"/>
	  </include>
  </group>

  <!-- Launch Gazebo and Husky with singlePillar World -->
  <group if="$(eval arg ('world_name') == 'singlePillar.world')">
    <include file="$(find husky_gazebo)/launch/husky_empty_world.launch">
      <arg name="world_name" value="$(find husky_highlevel_controller)/worlds/singlePillar.world"/>
		  <arg name="laser_enabled" value="true"/>
	  </include>
  </group>

  <!-- Launch Gazebo and Husky with wall World -->
  <group if="$(eval arg ('world_name') == 'wall.world')">
    <include file="$(find husky_gazebo)/launch/husky_empty_world.launch">
      <arg name="world_name" value="$(find husky_highlevel_controller)/worlds/wall.world"/>
		  <arg name="laser_enabled" value="true"/>
	  </include>
  </group>

  <!-- Launch Joy Teleop Keyboard Node -->
  <!-- <node name="teleop_twist_keyboard" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py"/> -->

  <node name="husky_sensor_evaluation_node" pkg="husky_highlevel_controller" type="husky_sensor_evaluation_node" output="screen">
    <rosparam command="load" file="$(find husky_highlevel_controller)/config/config.yaml"/>
  </node>

  <node name="husky_motion_controller_node" pkg="husky_highlevel_controller" type="husky_motion_controller_node" output="screen">
    <rosparam command="load" file="$(find husky_highlevel_controller)/config/config.yaml"/>
  </node>

  <node name="husky_action_client_node" pkg="husky_highlevel_controller" type="husky_action_client_node" output="screen">
    <rosparam command="load" file="$(find husky_highlevel_controller)/config/config.yaml"/>
  </node>

  <!-- RViz -->
  <group if="$(eval arg ('start_rviz') == 'true')">
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find husky_highlevel_controller)/config/config.rviz" required="false"/>
  </group>

  
</launch>
